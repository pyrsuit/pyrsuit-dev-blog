[
    {
        "title": "Prometheus + Multiprocess Apps: A Lesson from the Trenches",
        "date": "2025-07-13",
        "text": "I recently deployed an API in `Kubernetes` with a number of replicas, each running multiple `uWSGI` workers. I exposed a `/metrics` endpoint for `Prometheus` scraping â€” all looked good.\n\n&nbsp;\n\nUntil I realizedâ€¦ the metrics were off ðŸ« \n\n&nbsp;\n\nTurns out, when you're using multiple `uWSGI` workers, `Prometheus`' Python client needs **multiprocess mode** enabled to aggregate metrics across all worker processes. Without it, each process exposes its own separate metrics â€” so counters, for example, appear to jump up and down instead of increasing cumulatively across all workers. \n\n&nbsp;\n\nâœ… **Fix:** Configured __[multiprocess mode](https://prometheus.github.io/client_python/multiprocess/)__, so all workers write metrics to a shared directory.\n\n&nbsp;\n\nðŸ’¡ **Takeaway**: With multiple workers per replica, `Prometheus` scrapes the `/metrics` endpoint from only one worker per replica at random â€” so without multiprocess mode, your `Prometheus` metrics won't reflect the true state of your API â€” making it impossible to accurately track what's really happening."
    }
]